// Code generated by mockery v1.0.0. DO NOT EDIT.
package mocks

import http "net/http"
import mock "github.com/stretchr/testify/mock"
import rest "github.com/tahitianstud/mata-cli/internal/platform/rest"

// Handler is an autogenerated mock type for the Handler type
type Handler struct {
	mock.Mock
}

// Get provides a mock function with given fields: request, target
func (_m *Handler) Get(request rest.Request, target interface{}) (*http.Response, error) {
	ret := _m.Called(request, target)

	var r0 *http.Response
	if rf, ok := ret.Get(0).(func(rest.Request, interface{}) *http.Response); ok {
		r0 = rf(request, target)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*http.Response)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(rest.Request, interface{}) error); ok {
		r1 = rf(request, target)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// Post provides a mock function with given fields: request, target
func (_m *Handler) Post(request rest.Request, target interface{}) (*http.Response, error) {
	ret := _m.Called(request, target)

	var r0 *http.Response
	if rf, ok := ret.Get(0).(func(rest.Request, interface{}) *http.Response); ok {
		r0 = rf(request, target)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*http.Response)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(rest.Request, interface{}) error); ok {
		r1 = rf(request, target)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}
